/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/import": {
    post: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface components {
  schemas: {
    Language: {
      /** Language code, e.g. `cs` */
      id: string;
      isDefault: boolean;
      name: string;
    };
    Link: {
      type:
        | "unknown"
        | "HTTP"
        | "FACEBOOK"
        | "TWITTER"
        | "YOUTUBE"
        | "VIMEO"
        | "SOUNDCLOUD"
        | "LINKEDIN"
        | "CSFD"
        | "IMDB"
        | "INSTAGRAM";
      uri?: string;
    };
    Performer: {
      id: string;
      name: string;
      title?: string;
      description?: string;
      images?: components["schemas"]["Image"][];
      customFields?: components["schemas"]["CustomField"][];
      tags?: components["schemas"]["Tag"][];
      sessionIds: string[];
      venueIds: string[];
      links?: components["schemas"]["Link"][];
    };
    Venue: {
      id: string;
      name: string;
      order: number;
      description?: string;
      color?: string;
      location?: components["schemas"]["Location"];
    };
    Session: {
      id: string;
      performerIds: string[];
      performerNames: string[];
      venueId: string;
      venueName: string;
      name?: string;
      description?: string;
      timeFrom: string;
      timeTo: string;
      images?: components["schemas"]["Image"][];
      links?: components["schemas"]["Link"][];
      hasParent: boolean;
      subsessionIds: string[];
      likes?: number;
      forcedSessionDetail?: boolean;
    };
    CustomField: {
      name?: string;
      value?: string;
    };
    Image:
      | components["schemas"]["ResizinImage"]
      | components["schemas"]["UriImage"];
    ResizinImage: {
      id: string;
    };
    UriImage: {
      uri: string;
    };
    News: {
      id?: string;
      title?: string;
      body?: string;
      time?: string;
    };
    Day: {
      id?: string;
      timeFrom?: string;
      timeTo?: string;
    };
    Location: {
      lat?: number;
      lng?: number;
    };
    Group: {
      id?: string;
      name: string;
      type: "PERFORMER" | "SESSION";
      performerIds?: string[];
      sessionIds?: string[];
      description?: string;
      order?: number;
      images?: components["schemas"]["Image"][];
    };
    Tag: string;
  };
}

export interface operations {}
